# Generated by Django 2.2.10 on 2020-10-15 15:13

from django.db import migrations, models
import django.db.models.deletion
import mapbox_location_field.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='StorymapsChapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('media_link', models.CharField(blank=True, max_length=255, verbose_name='Media Link')),
                ('media_credit', models.CharField(blank=True, max_length=255, verbose_name='Media Credit')),
                ('media_credit_link', models.CharField(blank=True, max_length=255, verbose_name='Media Credit Link')),
                ('zoom', models.IntegerField(blank=True, help_text='Only used in combination with a SINGLE marker, not with multiple markers or GEOJson-overlay.', verbose_name='Zoom')),
                ('overlay', models.CharField(blank=True, help_text='e.g. historical map, from mapwarper.net.', max_length=255, verbose_name='Overlay')),
                ('overlay_transparency', models.FloatField(blank=True, help_text='Optional. Value between 0 and 1. E.g. 0.5', verbose_name='Overlay')),
            ],
            options={
                'verbose_name': 'I rörelse: Chapter',
                'verbose_name_plural': 'I rörelse: Chapters',
            },
        ),
        migrations.CreateModel(
            name='StorymapsGeoJsonOverlay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('data', models.TextField(help_text='JSON Format')),
            ],
            options={
                'verbose_name': 'I rörelse: GeoJSON Overlay',
                'verbose_name_plural': 'I rörelse: GeoJSON Overlays',
            },
        ),
        migrations.CreateModel(
            name='StorymapsStory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('subtitle', models.CharField(blank=True, max_length=255, verbose_name='Subtitle')),
                ('basemap_tiles', models.CharField(default='CartoDB.Positron', help_text='<a href="https://leaflet-extras.github.io/leaflet-providers/preview/">https://leaflet-extras.github.io/leaflet-providers/preview/</a>', max_length=255, verbose_name='Basemap Tiles')),
                ('narrative_background_color', models.CharField(blank=True, max_length=255, verbose_name='Narrative Background Color')),
                ('narrative_text_color', models.CharField(blank=True, max_length=255, verbose_name='Narrative Text Color')),
                ('narrative_Link_color', models.CharField(blank=True, max_length=255, verbose_name='Narrative Link Color')),
                ('active_chapter_background_color', models.CharField(blank=True, max_length=255, verbose_name='Active Chapter Background Color')),
                ('media_container_height', models.IntegerField(default=300, help_text="Maximum height of the image, in pixels. 200 is default. The image will be fit into the container with its proportions kept (it won't be skewed).", verbose_name='Media Container Height')),
                ('pixels_after_final_chapter', models.IntegerField(default=600, help_text='At least 100', verbose_name='Pixels after final chapter')),
                ('author_name', models.CharField(blank=True, help_text='Appears in map credits as "View data by..." (or leave blank)', max_length=255, verbose_name='Author Name')),
                ('author_email_or_website', models.CharField(blank=True, help_text='Create link in Author Name by inserting your email or web address (or leave blank)', max_length=255, verbose_name='Author Email or Website')),
            ],
            options={
                'verbose_name': 'I rörelse: Story',
                'verbose_name_plural': 'I rörelse: Stories',
            },
        ),
        migrations.CreateModel(
            name='StorymapsMarker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_name', models.CharField(blank=True, help_text='e.g. Göteborg, Aleppo, Farmors gård', max_length=255, verbose_name='Location Name')),
                ('location', mapbox_location_field.models.LocationField(map_attrs={})),
                ('style', models.CharField(blank=True, help_text='values: Location, Plain, Hidden', max_length=255, verbose_name='Style')),
                ('marker_color', models.CharField(blank=True, max_length=255, verbose_name='Marker Color')),
                ('chapter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='i_rorelse.StorymapsChapter')),
            ],
            options={
                'verbose_name': 'I rörelse: Marker',
                'verbose_name_plural': 'I rörelse: Markers',
            },
        ),
        migrations.AddField(
            model_name='storymapschapter',
            name='geojson_overlay',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='i_rorelse.StorymapsGeoJsonOverlay'),
        ),
        migrations.AddField(
            model_name='storymapschapter',
            name='story',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='i_rorelse.StorymapsStory'),
        ),
    ]
